{"Structs/CryptoError.html#/s:6Crypto0A5ErrorV10identifierSSv":{"name":"identifier","abstract":"<p>See <code>Debuggable.identifier</code></p>","parent_name":"CryptoError"},"Structs/CryptoError.html#/s:6Crypto0A5ErrorV6reasonSSv":{"name":"reason","abstract":"<p>See <code>Debuggable.reason</code></p>","parent_name":"CryptoError"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV7privateXeXeFZ":{"name":"private(pem:)","abstract":"<p>Creates a new <code>RSAKey</code> from a private key pem file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV6publicXeXeFZ":{"name":"public(certificate:)","abstract":"<p>Creates a new <code>RSAKey</code> from a public key certificate file.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html#/s:6Crypto6RSAKeyV4typeAA0B4TypeOv":{"name":"type","abstract":"<p>The specific RSA key type. Either public or private.</p>","parent_name":"RSAKey"},"Structs/RSAKey.html":{"name":"RSAKey","abstract":"<p>Represents an in-memory RSA key.</p>"},"Structs/CryptoError.html":{"name":"CryptoError","abstract":"<p>An error encountered while working with crypto.</p>"},"Enums/RSAKeyType.html#/s:6Crypto10RSAKeyTypeO6publicA2CmF":{"name":"public","abstract":"<p>A public RSA key. Used for verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAKeyType.html#/s:6Crypto10RSAKeyTypeO7privateA2CmF":{"name":"private","abstract":"<p>A private RSA key. Used for creating and verifying signatures.</p>","parent_name":"RSAKeyType"},"Enums/RSAInputFormat.html#/s:6Crypto14RSAInputFormatO6digestA2CmF":{"name":"digest","abstract":"<p>The input has been hashed already.</p>","parent_name":"RSAInputFormat"},"Enums/RSAInputFormat.html#/s:6Crypto14RSAInputFormatO7messageA2CmF":{"name":"message","abstract":"<p>Raw, unhashed message</p>","parent_name":"RSAInputFormat"},"Enums/CipherMode.html#/s:6Crypto10CipherModeO7encryptA2CmF":{"name":"encrypt","abstract":"<p>Encrypts arbitrary data to encrypted ciphertext.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html#/s:6Crypto10CipherModeO7decryptA2CmF":{"name":"decrypt","abstract":"<p>Decrypts encrypted ciphertext back to its original value.</p>","parent_name":"CipherMode"},"Enums/CipherMode.html":{"name":"CipherMode","abstract":"<p>Available cipher modes. Either <code>encrypt</code> or <code>decrypt</code>.</p>"},"Enums/RSAInputFormat.html":{"name":"RSAInputFormat","abstract":"<p>Supported RSA input formats.</p>"},"Enums/RSAKeyType.html":{"name":"RSAKeyType","abstract":"<p>Supported RSA key types.</p>"},"Global Variables.html#/s:6Crypto6BCryptAA0B6DigestCv":{"name":"BCrypt","abstract":"<p>Creates and verifies BCrypt hashes.</p>"},"Global Variables.html#/s:6Crypto6AES128AA6CipherCv":{"name":"AES128","abstract":"<p>AES-128 ECB Cipher.</p>"},"Global Variables.html#/s:6Crypto6AES256AA6CipherCv":{"name":"AES256","abstract":"<p>AES-256 ECB Cipher.</p>"},"Global Variables.html#/s:6Crypto3MD4AA6DigestCv":{"name":"MD4","abstract":"<p>MD4 digest.</p>"},"Global Variables.html#/s:6Crypto3MD5AA6DigestCv":{"name":"MD5","abstract":"<p>MD5 digest.</p>"},"Global Variables.html#/s:6Crypto4SHA1AA6DigestCv":{"name":"SHA1","abstract":"<p>SHA-1 digest.</p>"},"Global Variables.html#/s:6Crypto6SHA224AA6DigestCv":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA256AA6DigestCv":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA384AA6DigestCv":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest.</p>"},"Global Variables.html#/s:6Crypto6SHA512AA6DigestCv":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest.</p>"},"Classes/CryptoRandom.html#/s:6Crypto0A6RandomCACycfc":{"name":"init()","abstract":"<p>Creates a new <code>CryptoRandom</code>.</p>","parent_name":"CryptoRandom"},"Classes/CryptoRandom.html#/s:6Crypto0A6RandomC12generateData10Foundation0D0VSi5count_tKF":{"name":"generateData(count:)","abstract":"<p>See <code>DataGenerator</code>.</p>","parent_name":"CryptoRandom"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA256ACvZ":{"name":"SHA256","abstract":"<p>RSA using SHA256 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA384ACvZ":{"name":"SHA384","abstract":"<p>RSA using SHA384 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6SHA512ACvZ":{"name":"SHA512","abstract":"<p>RSA using SHA512 digest.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC9algorithmAA15DigestAlgorithmCv":{"name":"algorithm","abstract":"<p>The hashing algorithm to use, (e.g., SHA512). See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSACAcA15DigestAlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new RSA cipher using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC4signXeXeF":{"name":"sign(_:format:key:)","abstract":"<p>Signs the supplied input (in format specified by <code>format</code>).</p>","parent_name":"RSA"},"Classes/RSA.html#/s:6Crypto3RSAC6verifyXeXeF":{"name":"verify(_:signs:format:key:)","abstract":"<p>Returns <code>true</code> if the supplied signature was created by signing the plaintext data.</p>","parent_name":"RSA"},"Classes/HMAC.html#/s:6Crypto4HMACC3MD4ACvZ":{"name":"MD4","abstract":"<p>MD4 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC3MD5ACvZ":{"name":"MD5","abstract":"<p>MD5 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC4SHA1ACvZ":{"name":"SHA1","abstract":"<p>SHA-1 digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA224ACvZ":{"name":"SHA224","abstract":"<p>SHA-224 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA256ACvZ":{"name":"SHA256","abstract":"<p>SHA-256 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA384ACvZ":{"name":"SHA384","abstract":"<p>SHA-384 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6SHA512ACvZ":{"name":"SHA512","abstract":"<p>SHA-512 (SHA-2) digest based HMAC.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC9algorithmAA15DigestAlgorithmCv":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code> (e.g., SHA1, MD5, SHA256) to base the message authentication on.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACCAcA15DigestAlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>HMAC</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC12authenticateXeXeF":{"name":"authenticate(_:key:)","abstract":"<p>Authenticates the message using the supplied key. This method will first initialize or reset the HMAC","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC5resetXeXeF":{"name":"reset(key:)","abstract":"<p>Initializes or resets the HMAC context. This method sets this HMAC&rsquo;s key for subsequent calls to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:6Crypto4HMACC6updateXeXeF\">update(data:)</a></code>.</p>","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6updateXeXeF":{"name":"update(data:)","abstract":"<p>Updates the HMAC digest with a new chunk of data. This method can be called repeatedly for each new chunk.","parent_name":"HMAC"},"Classes/HMAC.html#/s:6Crypto4HMACC6finish10Foundation4DataVyKF":{"name":"finish()","abstract":"<p>Completes the HMAC digest. This method should be called once after one call to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/HMAC.html#/s:6Crypto4HMACC5resetXeXeF\">reset(key:)</a></code> and one more","parent_name":"HMAC"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC5namedACSSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a hash function algorithm by name (e.g., <q>sha256</q>).","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC4types5Int32Vv":{"name":"type","abstract":"<p>Returns the OpenSSL NID type for this algorithm.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC3md4ACvZ":{"name":"md4","abstract":"<p>MD4 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC3md5ACvZ":{"name":"md5","abstract":"<p>MD5 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC4sha1ACvZ":{"name":"sha1","abstract":"<p>SHA-1 digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha224ACvZ":{"name":"sha224","abstract":"<p>SHA-224 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha256ACvZ":{"name":"sha256","abstract":"<p>SHA-256 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha384ACvZ":{"name":"sha384","abstract":"<p>SHA-384 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/DigestAlgorithm.html#/s:6Crypto15DigestAlgorithmC6sha512ACvZ":{"name":"sha512","abstract":"<p>SHA-512 (SHA-2) digest.</p>","parent_name":"DigestAlgorithm"},"Classes/Digest.html#/s:6Crypto6DigestC9algorithmAA0B9AlgorithmCv":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code> (e.g., SHA1, MD5, SHA256) to use.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestCAcA0B9AlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Digest</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/DigestAlgorithm.html\">DigestAlgorithm</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC4hashXeXeF":{"name":"hash(_:)","abstract":"<p>Creates a digest for the supplied data. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC5resetyyKF\">.reset()</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6updateXeXeF\">.update(data:)</a></code>, and <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6finish10Foundation4DataVyKF\">.finish()</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC5resetyyKF":{"name":"reset()","abstract":"<p>Resets / initializes the digest algorithm context. This must be called once before calling <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC6updateXeXeF\">update(data:)</a></code>.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6updateXeXeF":{"name":"update(data:)","abstract":"<p>Updates the digest with another data chunk. This can be called multiple times. Use this method for streaming digests.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6finish10Foundation4DataVyKF":{"name":"finish()","abstract":"<p>Finalizes the digest, returning the digest data.</p>","parent_name":"Digest"},"Classes/Digest.html#/s:6Crypto6DigestC6digestXeXeF":{"name":"digest(_:)","abstract":"<p>See <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Digest.html#/s:6Crypto6DigestC4hashXeXeF\">Digest.hash(_:)</a></code></p>","parent_name":"Digest"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC5namedACSSKFZ":{"name":"named(_:)","abstract":"<p>Looks up a cipher function algorithm by name (e.g., <q>aes-128-cbc</q>).","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes128ecbACvZ":{"name":"aes128ecb","abstract":"<p>AES-128 ECB cipher.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC9aes256ecbACvZ":{"name":"aes256ecb","abstract":"<p>AES-256 ECB cipher.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC4types5Int32Vv":{"name":"type","abstract":"<p>Returns the OpenSSL NID type for this algorithm.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC7keySizes5Int32Vv":{"name":"keySize","abstract":"<p>This cipher&rsquo;s required key length.</p>","parent_name":"CipherAlgorithm"},"Classes/CipherAlgorithm.html#/s:6Crypto15CipherAlgorithmC6ivSizes5Int32Vv":{"name":"ivSize","abstract":"<p>This cipher&rsquo;s required initialization vector length.</p>","parent_name":"CipherAlgorithm"},"Classes/Cipher.html#/s:6Crypto6CipherC9algorithmAA0B9AlgorithmCv":{"name":"algorithm","abstract":"<p>The <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CipherAlgorithm.html\">CipherAlgorithm</a></code> (e.g., AES-128 ECB) to use.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherCAcA0B9AlgorithmC9algorithm_tcfc":{"name":"init(algorithm:)","abstract":"<p>Creates a new <code>Cipher</code> using the supplied <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/CipherAlgorithm.html\">CipherAlgorithm</a></code>.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC7encryptXeXeF":{"name":"encrypt(_:key:iv:)","abstract":"<p>Encrypts the supplied plaintext into ciphertext. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC5resetXeXeF\">reset(key:iv:mode:)</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC6updateXeXeF\">update(data:into:)</a></code>,","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC7decryptXeXeF":{"name":"decrypt(_:key:iv:)","abstract":"<p>Decrypts the supplied ciphertext back to plaintext. This method will call <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC5resetXeXeF\">reset(key:iv:mode:)</a></code>, <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html#/s:6Crypto6CipherC6updateXeXeF\">update(data:into:)</a></code>,","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC5resetXeXeF":{"name":"reset(key:iv:mode:)","abstract":"<p>Resets / initializes the cipher algorithm context. This must be called once before calling <code>update(data:)</code></p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC6updateXeXeF":{"name":"update(data:into:)","abstract":"<p>Encrypts or decrypts a chunk of data into the supplied buffer.</p>","parent_name":"Cipher"},"Classes/Cipher.html#/s:6Crypto6CipherC6finishy10Foundation4DataVz4into_tKF":{"name":"finish(into:)","abstract":"<p>Finalizes the encryption or decryption, appending any additional data into the supplied buffer.</p>","parent_name":"Cipher"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestCACycfc":{"name":"init()","abstract":"<p>Creates a new <code>BCryptDigest</code>. Use the global <code><a href=\"36f8f5912051ae747ef441d6511ca4cbGlobal Variables.html#/s:6Crypto6BCryptAA0B6DigestCv\">BCrypt</a></code> convenience variable.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestC4hashXeXeF":{"name":"hash(_:cost:salt:)","abstract":"<p>Creates a BCrypt digest for the supplied data.</p>","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html#/s:6Crypto12BCryptDigestC6verifyXeXeF":{"name":"verify(_:created:)","abstract":"<p>Verifies an existing BCrypt hash matches the supplied plaintext value. Verification works by parsing the salt and version from","parent_name":"BCryptDigest"},"Classes/BCryptDigest.html":{"name":"BCryptDigest","abstract":"<p>Creates and verifies BCrypt hashes. Normally you will not need to initialize one of these classes and you will"},"Classes/Cipher.html":{"name":"Cipher","abstract":"<p>Cryptographic encryption and decryption functions for converting plaintext to and from ciphertext.</p>"},"Classes/CipherAlgorithm.html":{"name":"CipherAlgorithm","abstract":"<p>Specifies a cipher algorithm (e.g., AES128-ECB) to be used with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Cipher.html\">Cipher</a></code>.</p>"},"Classes/Digest.html":{"name":"Digest","abstract":"<p>Cryptographic hash functions convert data of arbitrary size to a fixed-size digest.</p>"},"Classes/DigestAlgorithm.html":{"name":"DigestAlgorithm","abstract":"<p>Cryptographic hash function algorithm.</p>"},"Classes/HMAC.html":{"name":"HMAC","abstract":"<p>HMAC is a MAC (message authentication code), i.e. a keyed hash function used for message authentication, which is based on a hash function.</p>"},"Classes/RSA.html":{"name":"RSA","abstract":"<p>RSA is an asymmetric cryptographic algorithm for signing and verifying data.</p>"},"Classes/CryptoRandom.html":{"name":"CryptoRandom","abstract":"<p>Uses OpenSSL <code>RAND_bytes</code> to generate random data.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}