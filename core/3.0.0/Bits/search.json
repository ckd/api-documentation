{"Typealiases.html#/s:4Bits4Bytea":{"name":"Byte","abstract":"<p>A <code>Byte</code> is an 8-bit unsigned integer.</p>"},"Typealiases.html#/s:4Bits5Bytesa":{"name":"Bytes","abstract":"<p><code>Bytes</code> are a Swift array of 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits18BytesBufferPointera":{"name":"BytesBufferPointer","abstract":"<p><code>BytesBufferPointer</code> are a Swift <code>UnsafeBufferPointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits25MutableBytesBufferPointera":{"name":"MutableBytesBufferPointer","abstract":"<p><code>MutableBytesBufferPointer</code> are a Swift <code>UnsafeMutableBufferPointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits12BytesPointera":{"name":"BytesPointer","abstract":"<p><code>BytesPointer</code> are a Swift <code>UnsafePointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits19MutableBytesPointera":{"name":"MutableBytesPointer","abstract":"<p><code>MutableBytesPointer</code> are a Swift <code>UnsafeMutablePointer</code> to 8-bit unsigned integers.</p>"},"Typealiases.html#/s:4Bits10ByteBuffera":{"name":"ByteBuffer","abstract":"<p><code>ByteBuffer</code> is a typealias to NIO&rsquo;s <code>ByteBuffer</code>.</p>"},"Structs/BitsError.html#/s:4Bits0A5ErrorV10identifierSSv":{"name":"identifier","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV6reasonSSv":{"name":"reason","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV14possibleCausesSaySSGv":{"name":"possibleCauses","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV14suggestedFixesSaySSGv":{"name":"suggestedFixes","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html#/s:4Bits0A5ErrorV10stackTraceSaySSGSgv":{"name":"stackTrace","abstract":"<p>See <code>Debuggable</code></p>","parent_name":"BitsError"},"Structs/BitsError.html":{"name":"BitsError","abstract":"<p>Errors that can be thrown while working with Bits.</p>"},"Functions.html#/s:4Bits2teoiSbs5UInt8V_ADSgtF":{"name":"~=(_:_:)","abstract":"<p>Implements pattern matching for <code>Byte</code> to <code>Byte?</code>.</p>"},"Extensions/UnsafeBufferPointer.html#/s:SR4Bitss5UInt8VRszlE21caseInsensitiveEqualsSbSRyACG2to_tF":{"name":"caseInsensitiveEquals(to:)","abstract":"<p>Checks if the current bytes are equal to the contents of the provided ByteBuffer</p>","parent_name":"UnsafeBufferPointer"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE4djb2Siv":{"name":"djb2","abstract":"<p>Calculates <code>djb2</code> hash for this array of <code>UInt8</code>.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE21lowercasedASCIIStringSayACGyF":{"name":"lowercasedASCIIString()","abstract":"<p>Efficiently converts an array of bytes uppercased ASCII characters to lowercased.</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa4Bitss5UInt8VRszlE21caseInsensitiveEqualsSbSRyACG2to_tF":{"name":"caseInsensitiveEquals(to:)","abstract":"<p>Checks if the current bytes are equal to the contents of the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits18BytesBufferPointera\">BytesBufferPointer</a></code>.</p>","parent_name":"Array"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE8hexDebugSSv":{"name":"hexDebug","abstract":"<p>Returns a <code>0x</code> prefixed, space-separated, hex-encoded string for this <code>Data</code>.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE21lowercasedASCIIStringACyF":{"name":"lowercasedASCIIString()","abstract":"<p>Efficiently converts a <code>Data</code>&rsquo;s uppercased ASCII characters to lowercased.</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE14withByteBufferxxSRys5UInt8VGKcKlF":{"name":"withByteBuffer(_:)","abstract":"<p>Reads from a <code>Data</code> buffer using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits18BytesBufferPointera\">BytesBufferPointer</a></code> rather than a normal pointer</p>","parent_name":"Data"},"Extensions/Data.html#/s:10Foundation4DataV4BitsE21withMutableByteBufferxxSrys5UInt8VGKcKlF":{"name":"withMutableByteBuffer(_:)","abstract":"<p>Reads from a <code>Data</code> buffer using a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbTypealiases.html#/s:4Bits25MutableBytesBufferPointera\">MutableBytesBufferPointer</a></code> rather than a normal pointer</p>","parent_name":"Data"},"Extensions/ByteBuffer.html#/s:4Bits5writeXeXeF":{"name":"write(floatingPoint:)","abstract":"<p>Write <code>integer</code> into this <code>ByteBuffer</code>, moving the writer index forward appropriately.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits3setXeXeF":{"name":"set(floatingPoint:at:)","abstract":"<p>Write <code>integer</code> into this <code>ByteBuffer</code> starting at <code>index</code>. This does not alter the writer index.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits11peekIntegerXeXeF":{"name":"peekInteger(skipping:as:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits10peekStringXeXeF":{"name":"peekString(length:skipping:encoding:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits17peekFloatingPointXeXeF":{"name":"peekFloatingPoint(skipping:as:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits8peekDataXeXeF":{"name":"peekData(length:skipping:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits9peekBytesXeXeF":{"name":"peekBytes(count:skipping:)","abstract":"<p>Peeks into the <code>ByteBuffer</code> at the current reader index without changing any state.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits18requireReadIntegerXeXeF":{"name":"requireReadInteger(endianness:as:)","abstract":"<p>Reads a <code>FixedWidthInteger</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits17requireReadStringXeXeF":{"name":"requireReadString(length:)","abstract":"<p>Reads a <code>String</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits15requireReadDataXeXeF":{"name":"requireReadData(length:)","abstract":"<p>Reads a <code>Data</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits24requireReadFloatingPointXeXeF":{"name":"requireReadFloatingPoint(as:)","abstract":"<p>Reads a <code>BinaryFloatingPoint</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits24readNullTerminatedStringXeXeF":{"name":"readNullTerminatedString(encoding:)","abstract":"<p>Reads a null-terminated <code>String</code> from this <code>ByteBuffer</code>.</p>","parent_name":"ByteBuffer"},"Extensions/ByteBuffer.html#/s:4Bits31requireReadNullTerminatedStringXeXeF":{"name":"requireReadNullTerminatedString(encoding:)","abstract":"<p>Reads a null-terminated <code>String</code> from this <code>ByteBuffer</code> or throws an error.</p>","parent_name":"ByteBuffer"},"Extensions/Int.html#/s:Si4BitsE5bytesSays5UInt8VGSi9reserving_tF":{"name":"bytes(reserving:)","abstract":"<p>Undocumented</p>","parent_name":"Int"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8isLetterSbv":{"name":"isLetter","abstract":"<p>Returns true if the given byte is between lowercase or uppercase A-Z in UTF8.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE14isAlphanumericSbv":{"name":"isAlphanumeric","abstract":"<p>Returns whether or not a given byte represents a UTF8 digit 0 through 9, or an arabic letter</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10isHexDigitSbv":{"name":"isHexDigit","abstract":"<p>Returns whether a given byte can be interpreted as a hex value in UTF8, ie: 0-9, a-f, A-F.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1AABvZ":{"name":"A","abstract":"<p>A</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1BABvZ":{"name":"B","abstract":"<p>B</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1CABvZ":{"name":"C","abstract":"<p>C</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1DABvZ":{"name":"D","abstract":"<p>D</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1EABvZ":{"name":"E","abstract":"<p>E</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1FABvZ":{"name":"F","abstract":"<p>F</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1GABvZ":{"name":"G","abstract":"<p>G</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1HABvZ":{"name":"H","abstract":"<p>H</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1IABvZ":{"name":"I","abstract":"<p>I</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1JABvZ":{"name":"J","abstract":"<p>J</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1KABvZ":{"name":"K","abstract":"<p>K</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1LABvZ":{"name":"L","abstract":"<p>L</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1MABvZ":{"name":"M","abstract":"<p>M</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1NABvZ":{"name":"N","abstract":"<p>N</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1OABvZ":{"name":"O","abstract":"<p>O</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1PABvZ":{"name":"P","abstract":"<p>P</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1QABvZ":{"name":"Q","abstract":"<p>Q</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1RABvZ":{"name":"R","abstract":"<p>R</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1SABvZ":{"name":"S","abstract":"<p>S</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1TABvZ":{"name":"T","abstract":"<p>T</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1UABvZ":{"name":"U","abstract":"<p>U</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1VABvZ":{"name":"V","abstract":"<p>V</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1WABvZ":{"name":"W","abstract":"<p>W</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1XABvZ":{"name":"X","abstract":"<p>X</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1YABvZ":{"name":"Y","abstract":"<p>Y</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1ZABvZ":{"name":"Z","abstract":"<p>Z</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1aABvZ":{"name":"a","abstract":"<p>a</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1bABvZ":{"name":"b","abstract":"<p>b</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1cABvZ":{"name":"c","abstract":"<p>c</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1dABvZ":{"name":"d","abstract":"<p>d</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1eABvZ":{"name":"e","abstract":"<p>e</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1fABvZ":{"name":"f","abstract":"<p>f</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1gABvZ":{"name":"g","abstract":"<p>g</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1hABvZ":{"name":"h","abstract":"<p>h</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1iABvZ":{"name":"i","abstract":"<p>i</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1jABvZ":{"name":"j","abstract":"<p>j</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1kABvZ":{"name":"k","abstract":"<p>k</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1lABvZ":{"name":"l","abstract":"<p>l</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1mABvZ":{"name":"m","abstract":"<p>m</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1nABvZ":{"name":"n","abstract":"<p>n</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1oABvZ":{"name":"o","abstract":"<p>o</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1pABvZ":{"name":"p","abstract":"<p>p</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1qABvZ":{"name":"q","abstract":"<p>q</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1rABvZ":{"name":"r","abstract":"<p>r</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1sABvZ":{"name":"s","abstract":"<p>s</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1tABvZ":{"name":"t","abstract":"<p>t</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1uABvZ":{"name":"u","abstract":"<p>u</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1vABvZ":{"name":"v","abstract":"<p>v</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1wABvZ":{"name":"w","abstract":"<p>w</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1xABvZ":{"name":"x","abstract":"<p>x</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1yABvZ":{"name":"y","abstract":"<p>y</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE1zABvZ":{"name":"z","abstract":"<p>z</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12isWhitespaceSbv":{"name":"isWhitespace","abstract":"<p>Returns whether or not the given byte can be considered UTF8 whitespace</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE13horizontalTabABvZ":{"name":"horizontalTab","abstract":"<p>&rsquo;\\t&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7newLineABvZ":{"name":"newLine","abstract":"<p>&rsquo;\\n&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE14carriageReturnABvZ":{"name":"carriageReturn","abstract":"<p>&rsquo;\\r&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5spaceABvZ":{"name":"space","abstract":"<p>&rsquo; &rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE11exclamationABvZ":{"name":"exclamation","abstract":"<p>!</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5quoteABvZ":{"name":"quote","abstract":"<p>&ldquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10numberSignABvZ":{"name":"numberSign","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6dollarABvZ":{"name":"dollar","abstract":"<p>$</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7percentABvZ":{"name":"percent","abstract":"<p>%</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9ampersandABvZ":{"name":"ampersand","abstract":"<p>&amp;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10apostropheABvZ":{"name":"apostrophe","abstract":"<p>&rsquo;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE15leftParenthesisABvZ":{"name":"leftParenthesis","abstract":"<p>(</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE16rightParenthesisABvZ":{"name":"rightParenthesis","abstract":"<p>)</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8asteriskABvZ":{"name":"asterisk","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4plusABvZ":{"name":"plus","abstract":"<p>+</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5commaABvZ":{"name":"comma","abstract":"<p>,</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6hyphenABvZ":{"name":"hyphen","abstract":"<p>-</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6periodABvZ":{"name":"period","abstract":"<p>.</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12forwardSlashABvZ":{"name":"forwardSlash","abstract":"<p>/</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9backSlashABvZ":{"name":"backSlash","abstract":"<p>\\</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5colonABvZ":{"name":"colon","abstract":"<p>:</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE9semicolonABvZ":{"name":"semicolon","abstract":"<p>;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6equalsABvZ":{"name":"equals","abstract":"<p>=</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE12questionMarkABvZ":{"name":"questionMark","abstract":"<p>?</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE2atABvZ":{"name":"at","abstract":"<p>@</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE17leftSquareBracketABvZ":{"name":"leftSquareBracket","abstract":"<p>[</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE18rightSquareBracketABvZ":{"name":"rightSquareBracket","abstract":"<p>]</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE10underscoreABvZ":{"name":"underscore","abstract":"<p>_</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5tildaABvZ":{"name":"tilda","abstract":"<p>~</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE16leftCurlyBracketABvZ":{"name":"leftCurlyBracket","abstract":"<p>{</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE17rightCurlyBracketABvZ":{"name":"rightCurlyBracket","abstract":"<p>}</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE8lessThanABvZ":{"name":"lessThan","abstract":"<p>&lt;</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE11greaterThanABvZ":{"name":"greaterThan","abstract":"<blockquote>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4pipeABvZ":{"name":"pipe","abstract":"<table><thead>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4crlfSayABGvZ":{"name":"crlf","abstract":"<p>Defines the <code>crlf</code> used to denote line breaks in HTTP and many other formatters</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE7isDigitSbv":{"name":"isDigit","abstract":"<p>Returns whether or not a given byte represents a UTF8 digit 0 through 9</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4zeroABvZ":{"name":"zero","abstract":"<p>0 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3oneABvZ":{"name":"one","abstract":"<p>1 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3twoABvZ":{"name":"two","abstract":"<p>2 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5threeABvZ":{"name":"three","abstract":"<p>3 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4fourABvZ":{"name":"four","abstract":"<p>4 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4fiveABvZ":{"name":"five","abstract":"<p>5 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE3sixABvZ":{"name":"six","abstract":"<p>6 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5sevenABvZ":{"name":"seven","abstract":"<p>7 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE5eightABvZ":{"name":"eight","abstract":"<p>8 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE4nineABvZ":{"name":"nine","abstract":"<p>9 in utf8</p>","parent_name":"Byte"},"Extensions/Byte.html#/s:s5UInt8V4BitsE6stringSSv":{"name":"string","abstract":"<p>Returns the <code>String</code> representation of this <code>Byte</code> (unicode scalar).</p>","parent_name":"Byte"},"Extensions/Byte.html":{"name":"Byte","abstract":"<p>Adds alphabet conveniences to <code>Byte</code>.</p>"},"Extensions/Int.html":{"name":"Int"},"Extensions/ByteBuffer.html":{"name":"ByteBuffer"},"Extensions/Data.html":{"name":"Data"},"Extensions/Array.html":{"name":"Array"},"Extensions/UnsafeBufferPointer.html":{"name":"UnsafeBufferPointer"},"Global Variables.html#/s:4Bits17asciiCasingOffsets5UInt8Vv":{"name":"asciiCasingOffset","abstract":"<p>Offset between <code>a</code> and <code>A</code> in ASCII encoding.</p>"},"Global Variables.html":{"name":"Global Variables","abstract":"<p>The following global variables are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}